function [output_args]=if_statement(function_struct)
%Usage
%This module is used to create branching execution in an assay. Depending on the result
%of a test function either the modules in the IfFunctions or the modules in the ElseFunctions
%structures will be executed.
%
%Input Structure Members
%TestFunction – A structure that details the function which will be used to determine what subset
%of modules will be executed. This function needs to return a true/false value.
%IfFunctions – Set of modules which will be executed if the value returned by the test function is
%true.
%ElseFunctions – Set of modules which will be executed if the value returned by the test function
%is true.
%Any other arguments may be added to the FunctionArgs structure and they will be available to
%the modules contained in the IfFunctions and ElseFunctions structure members. This allows the
%
%modules in the “if statement” to have access to values generated by modules outside it.
%
%Output Structure Members
%Any values generated by the modules in the loop can be made available to modules outside the
%loop by adding them to the KeepValues structure.
%
%Example
%
%if_is_empty_cells_label_functions=[];
%else_is_empty_cells_label_functions=[];
%if_is_empty_cells_label_function.InstanceName='IfIsEmptyPreviousCellsLabel';
%if_is_empty_cells_label_function.FunctionHandle=@if_statement;
%if_is_empty_cells_label_function.FunctionArgs.TestResult.FunctionInstance='Is
%EmptyPreviousCellsLabel';
%if_is_empty_cells_label_function.FunctionArgs.TestResult.OutputArg='Boolean';
%if_is_empty_cells_label_function.FunctionArgs.CellsLabel.FunctionInstance='Re
%sizeCytoLabel';
%if_is_empty_cells_label_function.FunctionArgs.CellsLabel.OutputArg='Image';
%if_is_empty_cells_label_function.FunctionArgs.CurFrame.FunctionInstance='Segm
%entationLoop';
%if_is_empty_cells_label_function.FunctionArgs.CurFrame.OutputArg='LoopCounter
%';
%if_is_empty_cells_label_function.TestFunction.InstanceName='IsEmptyPreviousCe
%llsLabel';
%if_is_empty_cells_label_function.TestFunction.FunctionHandle=@isEmptyFunction
%;
%if_is_empty_cells_label_function.TestFunction.FunctionArgs.TestVariable.Funct
%ionInstance='IfIsEmptyPreviousCellsLabel';
%if_is_empty_cells_label_function.TestFunction.FunctionArgs.TestVariable.Input
%Arg='PreviousCellsLabel'; %only works for subfunctions
%if_is_empty_cells_label_function.TestFunction.FunctionArgs.PreviousCellsLabel
%.Value=[];
%if_is_empty_cells_label_function.KeepValues.Tracks.FunctionInstance='StartTra
%cks';
%if_is_empty_cells_label_function.KeepValues.Tracks.OutputArg='Tracks';
%
%…
%
%get_shape_params_function.InstanceName='GetShapeParameters';
%get_shape_params_function.FunctionHandle=@getShapeParams;
%get_shape_params_function.FunctionArgs.LabelMatrix.FunctionInstance='IfIsEmpt
%yPreviousCellsLabel';
%get_shape_params_function.FunctionArgs.LabelMatrix.InputArg='CellsLabel';
%if_is_empty_cells_label_functions=addToFunctionChain(if_is_empty_cells_label_
%functions,get_shape_params_function);
%
%…
%
%make_unassigned_cells_list_function.InstanceName='MakeUnassignedCellsList';
%make_unassigned_cells_list_function.FunctionHandle=@makeUnassignedCellsList;
%make_unassigned_cells_list_function.FunctionArgs.CellsCentroids.FunctionInsta
%nce='GetShapeParameters';
%make_unassigned_cells_list_function.FunctionArgs.CellsCentroids.OutputArg='Ce
%ntroids';
%else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_la
%bel_functions,make_unassigned_cells_list_function);
%
%…
%
%if_is_empty_cells_label_function.IfFunctions=if_is_empty_cells_label_function
%s;
%if_is_empty_cells_label_function.ElseFunctions=else_is_empty_cells_label_func
%tions;
%image_read_loop_functions=addToFunctionChain(image_read_loop_functions,if_is_
%empty_cells_label_function);

updateArgs(function_struct.InstanceName,function_struct.FunctionArgs,'input');
test_function_instance=function_struct.TestFunction.InstanceName;
test_output=callFunction(test_function_instance,false);
input_args=function_struct.FunctionArgs;
if(test_output.(input_args.TestResult.OutputArg))
    if_functions=function_struct.IfFunctions;
else
    if_functions=function_struct.ElseFunctions;
end

for i=1:size(if_functions,1)
    if_function_instance_name=if_functions{i}.InstanceName;
    callFunction(if_function_instance_name,false);
end

output_args=makeOutputStruct(function_struct);

%end if_statement
end
