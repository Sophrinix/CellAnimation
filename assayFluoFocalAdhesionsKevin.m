function []=assayFluoFocalAdhesionsKevin(image_path)

global functions_list;
functions_list=[];
TrackStruct=[];
TrackStruct.ImgExt='.tif';
ds='\'  %directory symbol
TrackStruct.DS=ds;
folder_idx=find(image_path==ds,1,'last');
ext_idx=find(image_path=='.',1,'last');
img_name=image_path((folder_idx+1):(ext_idx-1));
root_folder=image_path(1:(folder_idx-1));
TrackStruct.StartFrame=1;
TrackStruct.FrameCount=10;
TrackStruct.TimeFrame=1; %minutes
TrackStruct.FrameStep=1; %read every x frames
TrackStruct.OutputFolder=[root_folder ds 'output'];
track_dir=[TrackStruct.OutputFolder ds 'track'];
TrackStruct.TrackDir=track_dir;
mkdir(track_dir);
TrackStruct.SegFileRoot=[track_dir ds 'grayscale'];
TrackStruct.TracksFile=[track_dir ds 'tracks.mat'];
xls_folder=[TrackStruct.OutputFolder ds 'spreadsheets'];
mkdir(xls_folder);
TrackStruct.XlsFile=[xls_folder ds img_name '_intensities.csv'];
TrackStruct.NumberFormat='%06d';
TrackStruct.MaxMissingFrames=2;

%tracks grid layout
tracks_layout.TrackIDCol=1;
tracks_layout.TimeCol=2;
tracks_layout.Centroid1Col=3;
tracks_layout.Centroid2Col=4;
tracks_layout.Centroid3Col=5;
TrackStruct.TracksLayout=tracks_layout;

display_trackstruct_function.InstanceName='DisplayTrackStruct';
display_trackstruct_function.FunctionHandle=@displayVariable;
display_trackstruct_function.FunctionArgs.Variable.Value=TrackStruct;
display_trackstruct_function.FunctionArgs.VariableName.Value='TrackStruct';
functions_list=addToFunctionChain(functions_list,display_trackstruct_function);
%threshold images
image_read_loop_functions=[];
image_read_loop.InstanceName='SegmentationLoop';
image_read_loop.FunctionHandle=@forLoop;
image_read_loop.FunctionArgs.StartLoop.Value=TrackStruct.StartFrame;
image_read_loop.FunctionArgs.EndLoop.Value=(TrackStruct.StartFrame+TrackStruct.FrameCount-1)*TrackStruct.FrameStep;
image_read_loop.FunctionArgs.IncrementLoop.Value=TrackStruct.FrameStep;
image_read_loop.FunctionArgs.Tracks.FunctionInstance='IfIsEmptyPreviousCellsLabel';
image_read_loop.FunctionArgs.Tracks.OutputArg='Tracks';
image_read_loop.FunctionArgs.Tracks.Value=[];
image_read_loop.KeepValues.Tracks.FunctionInstance='IfIsEmptyPreviousCellsLabel';
image_read_loop.KeepValues.Tracks.OutputArg='Tracks';

display_curtrackframe_function.InstanceName='DisplayCurFrame';
display_curtrackframe_function.FunctionHandle=@displayVariable;
display_curtrackframe_function.FunctionArgs.Variable.FunctionInstance='SegmentationLoop';
display_curtrackframe_function.FunctionArgs.Variable.OutputArg='LoopCounter';
display_curtrackframe_function.FunctionArgs.VariableName.Value='Current Tracking Frame';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,display_curtrackframe_function);

read_image_function.InstanceName='ReadImagesInSegmentationLoop';
read_image_function.FunctionHandle=@readImageSlice;
read_image_function.FunctionArgs.ImageName.Value=image_path;
read_image_function.FunctionArgs.ImageChannel.Value='';
read_image_function.FunctionArgs.SliceIndex.FunctionInstance='SegmentationLoop';
read_image_function.FunctionArgs.SliceIndex.OutputArg='LoopCounter';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,read_image_function);

imadjust_function.InstanceName='ImAdjust';
imadjust_function.FunctionHandle=@imadjust_Wrapper;
imadjust_function.FunctionArgs.Image.FunctionInstance='ReadImagesInSegmentationLoop';
imadjust_function.FunctionArgs.Image.OutputArg='Image';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,imadjust_function);

if_first_frame_function.InstanceName='IfFirstFrame';
if_first_frame_function.FunctionHandle=@if_statement;
if_first_frame_function.FunctionArgs.TestResult.FunctionInstance='IsFirstFrame';
if_first_frame_function.FunctionArgs.TestResult.OutputArg='Boolean';
if_first_frame_function.TestFunction.InstanceName='IsFirstFrame';
if_first_frame_function.TestFunction.FunctionHandle=@equalFunction;
if_first_frame_function.TestFunction.FunctionArgs.Number1.FunctionInstance='IfFirstFrame';
if_first_frame_function.TestFunction.FunctionArgs.Number1.InputArg='CurFrame';
if_first_frame_function.TestFunction.FunctionArgs.Number2.Value=1;
if_first_frame_function.FunctionArgs.CurFrame.FunctionInstance='SegmentationLoop';
if_first_frame_function.FunctionArgs.CurFrame.OutputArg='LoopCounter';
if_first_frame_function.FunctionArgs.Image.FunctionInstance='ImAdjust';
if_first_frame_function.FunctionArgs.Image.OutputArg='Image';
if_first_frame_function.KeepValues.XYOffset.FunctionInstance='SelectRegion';
if_first_frame_function.KeepValues.XYOffset.OutputArg='XYPosition';
if_first_frame_function.KeepValues.CropSize.FunctionInstance='SelectRegion';
if_first_frame_function.KeepValues.CropSize.OutputArg='RectSize';
if_functions=[];

display_image_function.InstanceName='DisplayImage';
display_image_function.FunctionHandle=@displayImage;
display_image_function.FunctionArgs.Image.FunctionInstance='IfFirstFrame';
display_image_function.FunctionArgs.Image.InputArg='Image';
display_image_function.FunctionArgs.FigureNr.Value=1;
if_functions=addToFunctionChain(if_functions,display_image_function);

get_current_axes_function.InstanceName='GetCurrentAxes';
get_current_axes_function.FunctionHandle=@gcaWrapper;
get_current_axes_function.FunctionArgs=[];
if_functions=addToFunctionChain(if_functions,get_current_axes_function);

select_region_function.InstanceName='SelectRegion';
select_region_function.FunctionHandle=@rectSelection;
select_region_function.FunctionArgs.ParentHandle.FunctionInstance='GetCurrentAxes';
select_region_function.FunctionArgs.ParentHandle.OutputArg='CurrentAxesHandle';
if_functions=addToFunctionChain(if_functions,select_region_function);

if_first_frame_function.IfFunctions=if_functions;
if_first_frame_function.ElseFunctions={};
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,if_first_frame_function);


crop_image.InstanceName='CropImage';
crop_image.FunctionHandle=@cropImage;
crop_image.FunctionArgs.Image.FunctionInstance='ReadImagesInSegmentationLoop';
crop_image.FunctionArgs.Image.OutputArg='Image';
crop_image.FunctionArgs.XYOffset.FunctionInstance='IfFirstFrame';
crop_image.FunctionArgs.XYOffset.OutputArg='XYOffset';
crop_image.FunctionArgs.CropSize.FunctionInstance='IfFirstFrame';
crop_image.FunctionArgs.CropSize.OutputArg='CropSize';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,crop_image);

imadjust2_function.InstanceName='ImAdjust2';
imadjust2_function.FunctionHandle=@imadjust_Wrapper;
imadjust2_function.FunctionArgs.Image.FunctionInstance='CropImage';
imadjust2_function.FunctionArgs.Image.OutputArg='Image';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,imadjust2_function);

local_average_filter.InstanceName='LocalAverageFilter';
local_average_filter.FunctionHandle=@generateBinImgUsingLocAvg;
local_average_filter.FunctionArgs.Image.FunctionInstance='ImAdjust2';
local_average_filter.FunctionArgs.Image.OutputArg='Image';
local_average_filter.FunctionArgs.BrightnessThresholdPct.Value=1.05;
local_average_filter.FunctionArgs.Strel.Value='disk';
local_average_filter.FunctionArgs.StrelSize.Value=7;
local_average_filter.FunctionArgs.ClearBorder.Value=false;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,local_average_filter);

global_int_filter_function.InstanceName='GlobalIntensityFilter';
global_int_filter_function.FunctionHandle=@generateBinImgUsingGlobInt;
global_int_filter_function.FunctionArgs.Image.FunctionInstance='ImAdjust2';
global_int_filter_function.FunctionArgs.Image.OutputArg='Image';
global_int_filter_function.FunctionArgs.IntensityThresholdPct.Value=0.5;
global_int_filter_function.FunctionArgs.ClearBorder.Value=false;
global_int_filter_function.FunctionArgs.ClearBorderDist.Value=2;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,global_int_filter_function);

combine_bin_images_function.InstanceName='CombineBinaryImages';
combine_bin_images_function.FunctionHandle=@combineImages;
combine_bin_images_function.FunctionArgs.Image1.FunctionInstance='LocalAverageFilter';
combine_bin_images_function.FunctionArgs.Image1.OutputArg='Image';
combine_bin_images_function.FunctionArgs.Image2.FunctionInstance='GlobalIntensityFilter';
combine_bin_images_function.FunctionArgs.Image2.OutputArg='Image';
combine_bin_images_function.FunctionArgs.CombineOperation.Value='AND';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,combine_bin_images_function);

clear_small_objects_function.InstanceName='ClearSmallObjects';
clear_small_objects_function.FunctionHandle=@clearSmallObjects;
clear_small_objects_function.FunctionArgs.Image.FunctionInstance='CombineBinaryImages';
clear_small_objects_function.FunctionArgs.Image.OutputArg='Image';
clear_small_objects_function.FunctionArgs.MinObjectArea.Value=5;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,clear_small_objects_function);

label_focal_adhesions_function.InstanceName='LabelFocalAdhesions';
label_focal_adhesions_function.FunctionHandle=@labelObjects;
label_focal_adhesions_function.FunctionArgs.Image.FunctionInstance='ClearSmallObjects';
label_focal_adhesions_function.FunctionArgs.Image.OutputArg='Image';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,label_focal_adhesions_function);

area_filter_function.InstanceName='AreaFilter';
area_filter_function.FunctionHandle=@areaFilterLabel;
area_filter_function.FunctionArgs.ObjectsLabel.FunctionInstance='LabelFocalAdhesions';
area_filter_function.FunctionArgs.ObjectsLabel.OutputArg='LabelMatrix';
area_filter_function.FunctionArgs.MaxArea.Value=75;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,area_filter_function);

distance_watershed_function.InstanceName='DistanceWatershed';
distance_watershed_function.FunctionHandle=@distanceWatershed;
distance_watershed_function.FunctionArgs.Image.FunctionInstance='ClearSmallObjects';
distance_watershed_function.FunctionArgs.Image.OutputArg='Image';
distance_watershed_function.FunctionArgs.MedianFilterNhood.Value=1;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,distance_watershed_function);

segment_objects_using_markers_function.InstanceName='SegmentObjectsUsingMarkers';
segment_objects_using_markers_function.FunctionHandle=@segmentObjectsUsingMarkers;
segment_objects_using_markers_function.FunctionArgs.MarkersLabel.FunctionInstance='DistanceWatershed';
segment_objects_using_markers_function.FunctionArgs.MarkersLabel.OutputArg='LabelMatrix';
segment_objects_using_markers_function.FunctionArgs.ObjectsLabel.FunctionInstance='AreaFilter';
segment_objects_using_markers_function.FunctionArgs.ObjectsLabel.OutputArg='LabelMatrix';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,segment_objects_using_markers_function);

eccentricity_filter_function.InstanceName='EccentricityFilter';
eccentricity_filter_function.FunctionHandle=@eccentricityFilterLabel;
eccentricity_filter_function.FunctionArgs.ObjectsLabel.FunctionInstance='SegmentObjectsUsingMarkers';
eccentricity_filter_function.FunctionArgs.ObjectsLabel.OutputArg='LabelMatrix';
eccentricity_filter_function.FunctionArgs.MaxEccentricity.Value=0.85;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,eccentricity_filter_function);

if_first_frame_function2.InstanceName='IfFirstFrame2';
if_first_frame_function2.FunctionHandle=@if_statement;
if_first_frame_function2.FunctionArgs.TestResult.FunctionInstance='IsFirstFrame2';
if_first_frame_function2.FunctionArgs.TestResult.OutputArg='Boolean';
if_first_frame_function2.TestFunction.InstanceName='IsFirstFrame2';
if_first_frame_function2.TestFunction.FunctionHandle=@equalFunction;
if_first_frame_function2.TestFunction.FunctionArgs.Number1.FunctionInstance='IfFirstFrame2';
if_first_frame_function2.TestFunction.FunctionArgs.Number1.InputArg='CurFrame';
if_first_frame_function2.TestFunction.FunctionArgs.Number2.Value=1;
if_first_frame_function2.FunctionArgs.CurFrame.FunctionInstance='SegmentationLoop';
if_first_frame_function2.FunctionArgs.CurFrame.OutputArg='LoopCounter';
if_first_frame_function2.FunctionArgs.AvgImage.FunctionInstance='LocalAverageFilter';
if_first_frame_function2.FunctionArgs.AvgImage.OutputArg='Image';
if_first_frame_function2.FunctionArgs.ObjImage.FunctionInstance='ClearSmallObjects';
if_first_frame_function2.FunctionArgs.ObjImage.OutputArg='Image';
if_first_frame_function2.FunctionArgs.AreaImage.FunctionInstance='AreaFilter';
if_first_frame_function2.FunctionArgs.AreaImage.OutputArg='LabelMatrix';
if_first_frame_function2.FunctionArgs.EccImage.FunctionInstance='EccentricityFilter';
if_first_frame_function2.FunctionArgs.EccImage.OutputArg='LabelMatrix';
if_functions=[];

display_avg_function.InstanceName='DisplayLocalAverage';
display_avg_function.FunctionHandle=@showImageAndPause;
display_avg_function.FunctionArgs.Image.FunctionInstance='IfFirstFrame2';
display_avg_function.FunctionArgs.Image.InputArg='AvgImage';
display_avg_function.FunctionArgs.FigureNr.Value=2;
if_functions=addToFunctionChain(if_functions,display_avg_function);

display_obj_function.InstanceName='DisplayClearedObjects';
display_obj_function.FunctionHandle=@showImageAndPause;
display_obj_function.FunctionArgs.Image.FunctionInstance='IfFirstFrame2';
display_obj_function.FunctionArgs.Image.InputArg='ObjImage';
display_obj_function.FunctionArgs.FigureNr.Value=2;
if_functions=addToFunctionChain(if_functions,display_obj_function);

display_area_function.InstanceName='DisplayAreaImage';
display_area_function.FunctionHandle=@showImageAndPause;
display_area_function.FunctionArgs.Image.FunctionInstance='IfFirstFrame2';
display_area_function.FunctionArgs.Image.InputArg='AreaImage';
display_area_function.FunctionArgs.FigureNr.Value=2;
if_functions=addToFunctionChain(if_functions,display_area_function);

display_ecc_function.InstanceName='DisplayEccImage';
display_ecc_function.FunctionHandle=@showImageAndPause;
display_ecc_function.FunctionArgs.Image.FunctionInstance='IfFirstFrame2';
display_ecc_function.FunctionArgs.Image.InputArg='EccImage';
display_ecc_function.FunctionArgs.FigureNr.Value=2;
if_functions=addToFunctionChain(if_functions,display_ecc_function);

close_image_function.InstanceName='CloseImage';
close_image_function.FunctionHandle=@closeImage;
close_image_function.FunctionArgs.FigureNr.Value=1;
if_functions=addToFunctionChain(if_functions,close_image_function);

close_image_function2.InstanceName='CloseImage2';
close_image_function2.FunctionHandle=@closeImage;
close_image_function2.FunctionArgs.FigureNr.Value=2;
if_functions=addToFunctionChain(if_functions,close_image_function2);


if_first_frame_function2.IfFunctions=if_functions;
if_first_frame_function2.ElseFunctions={};
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,if_first_frame_function2);



% segment_objects_using_markers_function.InstanceName='SegmentObjectsUsingMarkers';
% segment_objects_using_markers_function.FunctionHandle=@segmentObjectsUsingMarkers;
% segment_objects_using_markers_function.FunctionArgs.MarkersLabel.FunctionInstance='DistanceWatershed';
% segment_objects_using_markers_function.FunctionArgs.MarkersLabel.OutputArg='LabelMatrix';
% segment_objects_using_markers_function.FunctionArgs.ObjectsLabel.FunctionInstance='LabelFocalAdhesions';
% segment_objects_using_markers_function.FunctionArgs.ObjectsLabel.OutputArg='LabelMatrix';
% image_read_loop_functions=addToFunctionChain(image_read_loop_functions,segment_objects_using_markers_function);

% %tracking
get_centroids_function.InstanceName='GetCentroids';
get_centroids_function.FunctionHandle=@getCentroids;
get_centroids_function.FunctionArgs.LabelMatrix.FunctionInstance='AreaFilter';
get_centroids_function.FunctionArgs.LabelMatrix.OutputArg='LabelMatrix';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,get_centroids_function);

get_intensities_function.InstanceName='GetObjectIntensities';
get_intensities_function.FunctionHandle=@getObjectIntensities;
get_intensities_function.FunctionArgs.LabelMatrix.FunctionInstance='AreaFilter';
get_intensities_function.FunctionArgs.LabelMatrix.OutputArg='LabelMatrix';
get_intensities_function.FunctionArgs.IntensityImage.FunctionInstance='ReadImagesInSegmentationLoop';
get_intensities_function.FunctionArgs.IntensityImage.OutputArg='Image';
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,get_intensities_function);

if_is_empty_cells_label_functions=[];
else_is_empty_cells_label_functions=[];
if_is_empty_cells_label_function.InstanceName='IfIsEmptyPreviousCellsLabel';
if_is_empty_cells_label_function.FunctionHandle=@if_statement;
if_is_empty_cells_label_function.FunctionArgs.TestResult.FunctionInstance='IsEmptyPreviousCellsLabel';
if_is_empty_cells_label_function.FunctionArgs.TestResult.OutputArg='Boolean';
if_is_empty_cells_label_function.FunctionArgs.CellsLabel.FunctionInstance='AreaFilter';
if_is_empty_cells_label_function.FunctionArgs.CellsLabel.OutputArg='LabelMatrix';
if_is_empty_cells_label_function.FunctionArgs.CurFrame.FunctionInstance='SegmentationLoop';
if_is_empty_cells_label_function.FunctionArgs.CurFrame.OutputArg='LoopCounter';
if_is_empty_cells_label_function.FunctionArgs.PreviousCellsLabel.FunctionInstance='SaveCellsLabel';
if_is_empty_cells_label_function.FunctionArgs.PreviousCellsLabel.OutputArg='CellsLabel';
if_is_empty_cells_label_function.FunctionArgs.PreviousCellsLabel.Value=[];
if_is_empty_cells_label_function.FunctionArgs.Tracks.FunctionInstance='SegmentationLoop';
if_is_empty_cells_label_function.FunctionArgs.Tracks.OutputArg='Tracks';
if_is_empty_cells_label_function.FunctionArgs.Tracks.Value=[];
if_is_empty_cells_label_function.FunctionArgs.ObjectCentroids.FunctionInstance='GetCentroids';
if_is_empty_cells_label_function.FunctionArgs.ObjectCentroids.OutputArg='Centroids';
if_is_empty_cells_label_function.FunctionArgs.ObjectIntensities.FunctionInstance='GetObjectIntensities';
if_is_empty_cells_label_function.FunctionArgs.ObjectIntensities.OutputArg='MeanIntensities';
if_is_empty_cells_label_function.FunctionArgs.TrackAssignments.Value=[];
if_is_empty_cells_label_function.TestFunction.InstanceName='IsEmptyPreviousCellsLabel';
if_is_empty_cells_label_function.TestFunction.FunctionHandle=@isEmptyFunction;
if_is_empty_cells_label_function.TestFunction.FunctionArgs.TestVariable.FunctionInstance='IfIsEmptyPreviousCellsLabel';
if_is_empty_cells_label_function.TestFunction.FunctionArgs.TestVariable.InputArg='PreviousCellsLabel'; %only works for subfunctions
if_is_empty_cells_label_function.TestFunction.FunctionArgs.PreviousCellsLabel.Value=[];
if_is_empty_cells_label_function.KeepValues.Tracks.FunctionInstance='StartTracks';
if_is_empty_cells_label_function.KeepValues.Tracks.OutputArg='Tracks';
if_is_empty_cells_label_function.KeepValues.Tracks.FunctionInstance2='ContinueTracks';
if_is_empty_cells_label_function.KeepValues.Tracks.OutputArg2='Tracks';
if_is_empty_cells_label_function.KeepValues.NewTracks.FunctionInstance='StartTracks';
if_is_empty_cells_label_function.KeepValues.NewTracks.OutputArg='Tracks';
if_is_empty_cells_label_function.KeepValues.NewTracks.FunctionInstance2='ContinueTracks';
if_is_empty_cells_label_function.KeepValues.NewTracks.OutputArg2='NewTracks';


start_tracks_function.InstanceName='StartTracks';
start_tracks_function.FunctionHandle=@startTracksWithProps;
start_tracks_function.FunctionArgs.CurFrame.FunctionInstance='IfIsEmptyPreviousCellsLabel';
start_tracks_function.FunctionArgs.CurFrame.InputArg='CurFrame'; %only works for subfunctions
start_tracks_function.FunctionArgs.TimeFrame.Value=TrackStruct.TimeFrame;
start_tracks_function.FunctionArgs.ObjectCentroids.FunctionInstance='IfIsEmptyPreviousCellsLabel';
start_tracks_function.FunctionArgs.ObjectCentroids.InputArg='ObjectCentroids';
start_tracks_function.FunctionArgs.Props.FunctionInstance='IfIsEmptyPreviousCellsLabel';
start_tracks_function.FunctionArgs.Props.InputArg='ObjectIntensities';
if_is_empty_cells_label_functions=addToFunctionChain(if_is_empty_cells_label_functions,start_tracks_function);

get_cur_tracks_function.InstanceName='GetCurrentTracks';
get_cur_tracks_function.FunctionHandle=@getCurrentTracks;
get_cur_tracks_function.FunctionArgs.Tracks.FunctionInstance='IfIsEmptyPreviousCellsLabel';
get_cur_tracks_function.FunctionArgs.Tracks.InputArg='Tracks';
get_cur_tracks_function.FunctionArgs.CurFrame.FunctionInstance='IfIsEmptyPreviousCellsLabel';
get_cur_tracks_function.FunctionArgs.CurFrame.InputArg='CurFrame';
get_cur_tracks_function.FunctionArgs.OffsetFrame.Value=-1;
get_cur_tracks_function.FunctionArgs.TimeFrame.Value=TrackStruct.TimeFrame;
get_cur_tracks_function.FunctionArgs.TimeCol.Value=tracks_layout.TimeCol;
get_cur_tracks_function.FunctionArgs.TrackIDCol.Value=tracks_layout.TrackIDCol;
get_cur_tracks_function.FunctionArgs.MaxMissingFrames.Value=TrackStruct.MaxMissingFrames;
get_cur_tracks_function.FunctionArgs.FrameStep.Value=TrackStruct.FrameStep;
else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_label_functions,get_cur_tracks_function);

get_prev_tracks_function=get_cur_tracks_function;
get_prev_tracks_function.InstanceName='GetPreviousTracks';
get_prev_tracks_function.FunctionArgs.OffsetFrame.Value=-2;
else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_label_functions,get_prev_tracks_function);

make_unassigned_cells_list_function.InstanceName='MakeUnassignedCellsList';
make_unassigned_cells_list_function.FunctionHandle=@makeUnassignedCellsList;
make_unassigned_cells_list_function.FunctionArgs.CellsCentroids.FunctionInstance='IfIsEmptyPreviousCellsLabel';
make_unassigned_cells_list_function.FunctionArgs.CellsCentroids.InputArg='ObjectCentroids';
else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_label_functions,make_unassigned_cells_list_function);

make_excluded_tracks_list_function.InstanceName='MakeExcludedTracksList';
make_excluded_tracks_list_function.FunctionHandle=@makeExcludedTracksList;
make_excluded_tracks_list_function.FunctionArgs.UnassignedCellsIDs.FunctionInstance='MakeUnassignedCellsList';
make_excluded_tracks_list_function.FunctionArgs.UnassignedCellsIDs.OutputArg='UnassignedCellsIDs';
else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_label_functions,make_excluded_tracks_list_function);

get_max_track_id_function.InstanceName='GetMaxTrackID';
get_max_track_id_function.FunctionHandle=@getMaxTrackID;
get_max_track_id_function.FunctionArgs.Tracks.FunctionInstance='IfIsEmptyPreviousCellsLabel';
get_max_track_id_function.FunctionArgs.Tracks.OutputArg='Tracks';
get_max_track_id_function.FunctionArgs.TrackIDCol.Value=tracks_layout.TrackIDCol;
else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_label_functions,get_max_track_id_function);

assign_cells_to_tracks_functions=[];
assign_cells_to_tracks_loop.InstanceName='AssignCellsToTracksLoop';
assign_cells_to_tracks_loop.FunctionHandle=@whileLoop;
assign_cells_to_tracks_loop.TestFunction.InstanceName='IsNotEmptyUnassignedCells';
assign_cells_to_tracks_loop.TestFunction.FunctionHandle=@isNotEmptyFunction;
assign_cells_to_tracks_loop.TestFunction.FunctionArgs.TestVariable.FunctionInstance='AssignCellsToTracksLoop';
assign_cells_to_tracks_loop.TestFunction.FunctionArgs.TestVariable.InputArg='UnassignedCells';
assign_cells_to_tracks_loop.FunctionArgs.TestResult.FunctionInstance='IsNotEmptyUnassignedCells';
assign_cells_to_tracks_loop.FunctionArgs.TestResult.OutputArg='Boolean';
assign_cells_to_tracks_loop.FunctionArgs.UnassignedCells.FunctionInstance='MakeUnassignedCellsList';
assign_cells_to_tracks_loop.FunctionArgs.UnassignedCells.OutputArg='UnassignedCellsIDs';
assign_cells_to_tracks_loop.FunctionArgs.UnassignedCells.FunctionInstance2='AssignCellToTrackUsingAll';
assign_cells_to_tracks_loop.FunctionArgs.UnassignedCells.OutputArg2='UnassignedIDs';
assign_cells_to_tracks_loop.FunctionArgs.ExcludedTracks.FunctionInstance='MakeExcludedTracksList';
assign_cells_to_tracks_loop.FunctionArgs.ExcludedTracks.OutputArg='ExcludedTracks';
assign_cells_to_tracks_loop.FunctionArgs.ExcludedTracks.FunctionInstance2='AssignCellToTrackUsingAll';
assign_cells_to_tracks_loop.FunctionArgs.ExcludedTracks.OutputArg2='ExcludedTracks';
assign_cells_to_tracks_loop.FunctionArgs.CellsLabel.FunctionInstance='IfIsEmptyPreviousCellsLabel';
assign_cells_to_tracks_loop.FunctionArgs.CellsLabel.InputArg='CellsLabel';
assign_cells_to_tracks_loop.FunctionArgs.PreviousCellsLabel.FunctionInstance='IfIsEmptyPreviousCellsLabel';
assign_cells_to_tracks_loop.FunctionArgs.PreviousCellsLabel.InputArg='PreviousCellsLabel';
assign_cells_to_tracks_loop.FunctionArgs.CellsCentroids.FunctionInstance='IfIsEmptyPreviousCellsLabel';
assign_cells_to_tracks_loop.FunctionArgs.CellsCentroids.InputArg='ObjectCentroids';
assign_cells_to_tracks_loop.FunctionArgs.CurrentTracks.FunctionInstance='GetCurrentTracks';
assign_cells_to_tracks_loop.FunctionArgs.CurrentTracks.OutputArg='Tracks';
assign_cells_to_tracks_loop.FunctionArgs.TrackAssignments.FunctionInstance='IfIsEmptyPreviousCellsLabel';
assign_cells_to_tracks_loop.FunctionArgs.TrackAssignments.InputArg='TrackAssignments';
assign_cells_to_tracks_loop.FunctionArgs.TrackAssignments.FunctionInstance2='AssignCellToTrackUsingAll';
assign_cells_to_tracks_loop.FunctionArgs.TrackAssignments.OutputArg2='TrackAssignments';
assign_cells_to_tracks_loop.FunctionArgs.MaxTrackID.FunctionInstance='GetMaxTrackID';
assign_cells_to_tracks_loop.FunctionArgs.MaxTrackID.OutputArg='MaxTrackID';
assign_cells_to_tracks_loop.FunctionArgs.Tracks.FunctionInstance='IfIsEmptyPreviousCellsLabel';
assign_cells_to_tracks_loop.FunctionArgs.Tracks.InputArg='Tracks';
assign_cells_to_tracks_loop.FunctionArgs.PreviousTracks.FunctionInstance='GetPreviousTracks';
assign_cells_to_tracks_loop.FunctionArgs.PreviousTracks.OutputArg='Tracks';
assign_cells_to_tracks_loop.KeepValues.TrackAssignments.FunctionInstance='AssignCellToTrackUsingAll';
assign_cells_to_tracks_loop.KeepValues.TrackAssignments.OutputArg='TrackAssignments';


get_current_unassigned_cell_function.InstanceName='GetCurrentUnassignedCell';
get_current_unassigned_cell_function.FunctionHandle=@getCurrentUnassignedCell;
get_current_unassigned_cell_function.FunctionArgs.UnassignedCells.FunctionInstance='AssignCellsToTracksLoop';
get_current_unassigned_cell_function.FunctionArgs.UnassignedCells.InputArg='UnassignedCells';
assign_cells_to_tracks_functions=addToFunctionChain(assign_cells_to_tracks_functions,get_current_unassigned_cell_function);

assign_cell_to_track_function.InstanceName='AssignCellToTrackUsingAll';
assign_cell_to_track_function.FunctionHandle=@assignCellToTrackUsingNN;
assign_cell_to_track_function.FunctionArgs.UnassignedCells.FunctionInstance='AssignCellsToTracksLoop';
assign_cell_to_track_function.FunctionArgs.UnassignedCells.InputArg='UnassignedCells';
assign_cell_to_track_function.FunctionArgs.ExcludedTracks.FunctionInstance='AssignCellsToTracksLoop';
assign_cell_to_track_function.FunctionArgs.ExcludedTracks.InputArg='ExcludedTracks';
assign_cell_to_track_function.FunctionArgs.CellsCentroids.FunctionInstance='AssignCellsToTracksLoop';
assign_cell_to_track_function.FunctionArgs.CellsCentroids.InputArg='CellsCentroids';
assign_cell_to_track_function.FunctionArgs.CurrentTracks.FunctionInstance='AssignCellsToTracksLoop';
assign_cell_to_track_function.FunctionArgs.CurrentTracks.InputArg='CurrentTracks';
assign_cell_to_track_function.FunctionArgs.TrackAssignments.FunctionInstance='AssignCellsToTracksLoop';
assign_cell_to_track_function.FunctionArgs.TrackAssignments.InputArg='TrackAssignments';
assign_cell_to_track_function.FunctionArgs.MaxTrackID.FunctionInstance='AssignCellsToTracksLoop';
assign_cell_to_track_function.FunctionArgs.MaxTrackID.InputArg='MaxTrackID';
assign_cell_to_track_function.FunctionArgs.Tracks.FunctionInstance='AssignCellsToTracksLoop';
assign_cell_to_track_function.FunctionArgs.Tracks.InputArg='Tracks';
assign_cell_to_track_function.FunctionArgs.TracksLayout.Value=tracks_layout;
assign_cells_to_tracks_functions=addToFunctionChain(assign_cells_to_tracks_functions,assign_cell_to_track_function);


assign_cells_to_tracks_loop.LoopFunctions=assign_cells_to_tracks_functions;
else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_label_functions,assign_cells_to_tracks_loop);

continue_tracks_function.InstanceName='ContinueTracks';
continue_tracks_function.FunctionHandle=@continueTracksWithProps;
continue_tracks_function.FunctionArgs.Tracks.FunctionInstance='IfIsEmptyPreviousCellsLabel';
continue_tracks_function.FunctionArgs.Tracks.InputArg='Tracks';
continue_tracks_function.FunctionArgs.TrackAssignments.FunctionInstance='AssignCellsToTracksLoop';
continue_tracks_function.FunctionArgs.TrackAssignments.OutputArg='TrackAssignments';
continue_tracks_function.FunctionArgs.CurFrame.FunctionInstance='IfIsEmptyPreviousCellsLabel';
continue_tracks_function.FunctionArgs.CurFrame.InputArg='CurFrame';
continue_tracks_function.FunctionArgs.ObjectCentroids.FunctionInstance='IfIsEmptyPreviousCellsLabel';
continue_tracks_function.FunctionArgs.ObjectCentroids.InputArg='ObjectCentroids';
continue_tracks_function.FunctionArgs.Props.FunctionInstance='IfIsEmptyPreviousCellsLabel';
continue_tracks_function.FunctionArgs.Props.InputArg='ObjectIntensities';
continue_tracks_function.FunctionArgs.TimeFrame.Value=TrackStruct.TimeFrame;
else_is_empty_cells_label_functions=addToFunctionChain(else_is_empty_cells_label_functions,continue_tracks_function);

if_is_empty_cells_label_function.IfFunctions=if_is_empty_cells_label_functions;
if_is_empty_cells_label_function.ElseFunctions=else_is_empty_cells_label_functions;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,if_is_empty_cells_label_function);

save_cells_label_function.InstanceName='SaveCellsLabel';
save_cells_label_function.FunctionHandle=@saveCellsLabel;
save_cells_label_function.FunctionArgs.CellsLabel.FunctionInstance='AreaFilter';
save_cells_label_function.FunctionArgs.CellsLabel.OutputArg='LabelMatrix';
save_cells_label_function.FunctionArgs.CurFrame.FunctionInstance='SegmentationLoop';
save_cells_label_function.FunctionArgs.CurFrame.OutputArg='LoopCounter';
save_cells_label_function.FunctionArgs.FileRoot.Value=TrackStruct.SegFileRoot;
save_cells_label_function.FunctionArgs.NumberFormat.Value=TrackStruct.NumberFormat;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,save_cells_label_function);

display_tracks_function.InstanceName='DisplayTracks';
display_tracks_function.FunctionHandle=@displayTracksData;
display_tracks_function.FunctionArgs.ShowIDs.Value=false;
display_tracks_function.FunctionArgs.IDList.Value=[];
display_tracks_function.FunctionArgs.Image.FunctionInstance='ImAdjust2';
display_tracks_function.FunctionArgs.Image.OutputArg='Image';
display_tracks_function.FunctionArgs.CellsLabel.FunctionInstance='AreaFilter';
display_tracks_function.FunctionArgs.CellsLabel.OutputArg='LabelMatrix';
display_tracks_function.FunctionArgs.CurrentTracks.FunctionInstance='IfIsEmptyPreviousCellsLabel';
display_tracks_function.FunctionArgs.CurrentTracks.OutputArg='NewTracks';
display_tracks_function.FunctionArgs.CurFrame.FunctionInstance='SegmentationLoop';
display_tracks_function.FunctionArgs.CurFrame.OutputArg='LoopCounter';
display_tracks_function.FunctionArgs.TracksLayout.Value=tracks_layout;
display_tracks_function.FunctionArgs.FileRoot.Value=[track_dir ds img_name];
display_tracks_function.FunctionArgs.NumberFormat.Value=TrackStruct.NumberFormat;
image_read_loop_functions=addToFunctionChain(image_read_loop_functions,display_tracks_function);

image_read_loop.LoopFunctions=image_read_loop_functions;
functions_list=addToFunctionChain(functions_list,image_read_loop);


save_tracks_function.InstanceName='SaveTracks';
save_tracks_function.FunctionHandle=@saveTracks;
save_tracks_function.FunctionArgs.Tracks.FunctionInstance='SegmentationLoop';
save_tracks_function.FunctionArgs.Tracks.OutputArg='Tracks';
save_tracks_function.FunctionArgs.TracksFileName.Value=TrackStruct.TracksFile;
functions_list=addToFunctionChain(functions_list,save_tracks_function);

save_spreadsheet.InstanceName='SaveSpreadsheet';
save_spreadsheet.FunctionHandle=@saveSpreadsheet;
save_spreadsheet.FunctionArgs.Columns.FunctionInstance='SegmentationLoop';
save_spreadsheet.FunctionArgs.Columns.OutputArg='Tracks';
save_spreadsheet.FunctionArgs.ColumnHeaders.Value='Track IDs,Time,Centroid1,Centroid2,Intensity';
save_spreadsheet.FunctionArgs.XlsFile.Value=TrackStruct.XlsFile;
functions_list=addToFunctionChain(functions_list,save_spreadsheet);



global dependencies_list;
global dependencies_index;
dependencies_list={};
dependencies_index=java.util.Hashtable;
makeDependencies([]);
runFunctions();

%end function
end