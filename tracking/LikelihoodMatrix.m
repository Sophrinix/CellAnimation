function lklhdMatrix = LikelihoodMatrix(prevImage, ...
                                        curImage, ...
                                        distanceMean, ...
                                        distanceCovariance, ...
                                        N)
    
    prevTracks = find([prevImage(:).trackNum]);
    curNuclei = 1:size(curImage,1);%find([curImage(:).nucleus]);
    lklhdMatrix = zeros(size(prevTracks,2), ...
                        size(curNuclei,2));% + ...
                        %size(curNuclei,2) * ...
                        %(size(curNuclei,2) - 1) / ...
                        %2);%added space to add all pairs of objects (merge candidates)
    
    for(prevObj=1:size(prevTracks,2))
        for(curObj = 1:size(curNuclei,2))
            lklhd = ...
                LikelihoodOfMatch(Distance(prevImage(prevTracks(prevObj)), ...
                                           curImage(curNuclei(curObj))), ...
                                  distanceMean, ...
                                  distanceCovariance, ...
                                  N);
                lklhdMatrix(prevObj, curObj) = lklhd;
        end
        %colIndex = size(curNuclei,2) + 1;
        %for(mergeCand1=1:size(curNuclei,2))
        %    for(mergeCand2=(mergeCand1 + 1):size(curNuclei,2))
        %        lklhd = LikelihoodOfMatch(Distance(prevImage(prevTracks(prevObj)), ...
        %                                           MergeObjects(curImage(curNuclei(mergeCand1)), ...
        %                                                        curImage(curNuclei(mergeCand2)))), ...
        %                                  distanceMean, ...
        %                                  distanceCovariance, ...
        %                                  N);
        %        lklhdMatrix(prevObj, colIndex) = lklhd;
        %        colIndex = colIndex + 1;
        %    end
        %end
    end    
end